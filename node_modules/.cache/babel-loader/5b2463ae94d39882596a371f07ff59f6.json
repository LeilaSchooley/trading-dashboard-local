{"ast":null,"code":"var debug = require('debug')('log4js:recording');\nvar recordedEvents = [];\nfunction configure() {\n  return function (logEvent) {\n    debug(\"received logEvent, number of events now \".concat(recordedEvents.length + 1));\n    debug('log event was ', logEvent);\n    recordedEvents.push(logEvent);\n  };\n}\nfunction replay() {\n  return recordedEvents.slice();\n}\nfunction reset() {\n  recordedEvents.length = 0;\n}\nmodule.exports = {\n  configure: configure,\n  replay: replay,\n  playback: replay,\n  reset: reset,\n  erase: reset\n};","map":{"version":3,"names":["debug","require","recordedEvents","configure","logEvent","concat","length","push","replay","slice","reset","module","exports","playback","erase"],"sources":["C:/Users/badsc/Documents/GitHub/trading-dashboard-local/node_modules/log4js/lib/appenders/recording.js"],"sourcesContent":["const debug = require('debug')('log4js:recording');\n\nconst recordedEvents = [];\n\nfunction configure() {\n  return function (logEvent) {\n    debug(\n      `received logEvent, number of events now ${recordedEvents.length + 1}`\n    );\n    debug('log event was ', logEvent);\n    recordedEvents.push(logEvent);\n  };\n}\n\nfunction replay() {\n  return recordedEvents.slice();\n}\n\nfunction reset() {\n  recordedEvents.length = 0;\n}\n\nmodule.exports = {\n  configure,\n  replay,\n  playback: replay,\n  reset,\n  erase: reset,\n};\n"],"mappings":"AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC,CAAC,kBAAkB,CAAC;AAElD,IAAMC,cAAc,GAAG,EAAE;AAEzB,SAASC,SAASA,CAAA,EAAG;EACnB,OAAO,UAAUC,QAAQ,EAAE;IACzBJ,KAAK,4CAAAK,MAAA,CACwCH,cAAc,CAACI,MAAM,GAAG,CAAC,CACtE,CAAC;IACDN,KAAK,CAAC,gBAAgB,EAAEI,QAAQ,CAAC;IACjCF,cAAc,CAACK,IAAI,CAACH,QAAQ,CAAC;EAC/B,CAAC;AACH;AAEA,SAASI,MAAMA,CAAA,EAAG;EAChB,OAAON,cAAc,CAACO,KAAK,CAAC,CAAC;AAC/B;AAEA,SAASC,KAAKA,CAAA,EAAG;EACfR,cAAc,CAACI,MAAM,GAAG,CAAC;AAC3B;AAEAK,MAAM,CAACC,OAAO,GAAG;EACfT,SAAS,EAATA,SAAS;EACTK,MAAM,EAANA,MAAM;EACNK,QAAQ,EAAEL,MAAM;EAChBE,KAAK,EAALA,KAAK;EACLI,KAAK,EAAEJ;AACT,CAAC"},"metadata":{},"sourceType":"script"}