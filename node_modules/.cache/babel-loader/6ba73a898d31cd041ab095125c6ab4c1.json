{"ast":null,"code":"var debug = require('debug')('log4js:noLogFilter');\n\n/**\n * The function removes empty or null regexp from the array\n * @param {string[]} regexp\n * @returns {string[]} a filtered string array with not empty or null regexp\n */\nfunction removeNullOrEmptyRegexp(regexp) {\n  var filtered = regexp.filter(function (el) {\n    return el != null && el !== '';\n  });\n  return filtered;\n}\n\n/**\n * Returns a function that will exclude the events in case they match\n * with the regular expressions provided\n * @param {(string|string[])} filters contains the regexp that will be used for the evaluation\n * @param {*} appender\n * @returns {function}\n */\nfunction noLogFilter(filters, appender) {\n  return function (logEvent) {\n    debug(\"Checking data: \".concat(logEvent.data, \" against filters: \").concat(filters));\n    if (typeof filters === 'string') {\n      filters = [filters];\n    }\n    filters = removeNullOrEmptyRegexp(filters);\n    var regex = new RegExp(filters.join('|'), 'i');\n    if (filters.length === 0 || logEvent.data.findIndex(function (value) {\n      return regex.test(value);\n    }) < 0) {\n      debug('Not excluded, sending to appender');\n      appender(logEvent);\n    }\n  };\n}\nfunction configure(config, layouts, findAppender) {\n  var appender = findAppender(config.appender);\n  return noLogFilter(config.exclude, appender);\n}\nmodule.exports.configure = configure;","map":{"version":3,"names":["debug","require","removeNullOrEmptyRegexp","regexp","filtered","filter","el","noLogFilter","filters","appender","logEvent","concat","data","regex","RegExp","join","length","findIndex","value","test","configure","config","layouts","findAppender","exclude","module","exports"],"sources":["C:/Users/badsc/Documents/GitHub/trading-dashboard-local/node_modules/log4js/lib/appenders/noLogFilter.js"],"sourcesContent":["const debug = require('debug')('log4js:noLogFilter');\n\n/**\n * The function removes empty or null regexp from the array\n * @param {string[]} regexp\n * @returns {string[]} a filtered string array with not empty or null regexp\n */\nfunction removeNullOrEmptyRegexp(regexp) {\n  const filtered = regexp.filter((el) => el != null && el !== '');\n  return filtered;\n}\n\n/**\n * Returns a function that will exclude the events in case they match\n * with the regular expressions provided\n * @param {(string|string[])} filters contains the regexp that will be used for the evaluation\n * @param {*} appender\n * @returns {function}\n */\nfunction noLogFilter(filters, appender) {\n  return (logEvent) => {\n    debug(`Checking data: ${logEvent.data} against filters: ${filters}`);\n    if (typeof filters === 'string') {\n      filters = [filters];\n    }\n    filters = removeNullOrEmptyRegexp(filters);\n    const regex = new RegExp(filters.join('|'), 'i');\n    if (\n      filters.length === 0 ||\n      logEvent.data.findIndex((value) => regex.test(value)) < 0\n    ) {\n      debug('Not excluded, sending to appender');\n      appender(logEvent);\n    }\n  };\n}\n\nfunction configure(config, layouts, findAppender) {\n  const appender = findAppender(config.appender);\n  return noLogFilter(config.exclude, appender);\n}\n\nmodule.exports.configure = configure;\n"],"mappings":"AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC,CAAC,oBAAoB,CAAC;;AAEpD;AACA;AACA;AACA;AACA;AACA,SAASC,uBAAuBA,CAACC,MAAM,EAAE;EACvC,IAAMC,QAAQ,GAAGD,MAAM,CAACE,MAAM,CAAC,UAACC,EAAE;IAAA,OAAKA,EAAE,IAAI,IAAI,IAAIA,EAAE,KAAK,EAAE;EAAA,EAAC;EAC/D,OAAOF,QAAQ;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,WAAWA,CAACC,OAAO,EAAEC,QAAQ,EAAE;EACtC,OAAO,UAACC,QAAQ,EAAK;IACnBV,KAAK,mBAAAW,MAAA,CAAmBD,QAAQ,CAACE,IAAI,wBAAAD,MAAA,CAAqBH,OAAO,CAAE,CAAC;IACpE,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;MAC/BA,OAAO,GAAG,CAACA,OAAO,CAAC;IACrB;IACAA,OAAO,GAAGN,uBAAuB,CAACM,OAAO,CAAC;IAC1C,IAAMK,KAAK,GAAG,IAAIC,MAAM,CAACN,OAAO,CAACO,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC;IAChD,IACEP,OAAO,CAACQ,MAAM,KAAK,CAAC,IACpBN,QAAQ,CAACE,IAAI,CAACK,SAAS,CAAC,UAACC,KAAK;MAAA,OAAKL,KAAK,CAACM,IAAI,CAACD,KAAK,CAAC;IAAA,EAAC,GAAG,CAAC,EACzD;MACAlB,KAAK,CAAC,mCAAmC,CAAC;MAC1CS,QAAQ,CAACC,QAAQ,CAAC;IACpB;EACF,CAAC;AACH;AAEA,SAASU,SAASA,CAACC,MAAM,EAAEC,OAAO,EAAEC,YAAY,EAAE;EAChD,IAAMd,QAAQ,GAAGc,YAAY,CAACF,MAAM,CAACZ,QAAQ,CAAC;EAC9C,OAAOF,WAAW,CAACc,MAAM,CAACG,OAAO,EAAEf,QAAQ,CAAC;AAC9C;AAEAgB,MAAM,CAACC,OAAO,CAACN,SAAS,GAAGA,SAAS"},"metadata":{},"sourceType":"script"}