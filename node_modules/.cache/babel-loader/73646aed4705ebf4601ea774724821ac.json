{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\badsc\\\\Documents\\\\GitHub\\\\trading-dashboard-local\\\\src\\\\main\\\\DashboardOne.js\";\nimport React, { Component, useState, useContext, useLayoutEffect, useEffect } from 'react';\nimport { Box, Button, ButtonGroup } from \"@chakra-ui/react\";\n//import { DashboardNavbar } from './components/navbar/DashboardNavbar';\n\nimport TableCache from './cache/TableCache.js';\n//import StockPicker from './components/stockpicker/StockPicker';\n\nimport { DashboardContext } from './context/DashboardContext.js';\nimport Container from './back-test-data-handler/container/Container';\nconst DashboardOne = ({\n  children\n}) => {\n  const [lock, setLock] = useState(true);\n  const [dashboardTwo, setDashboardTwo] = useState([]);\n  const [initialiseTableTwo, setInitialiseTableTwo] = useState(false);\n  const [tempDashboard, setTempDashboard] = useState([]);\n  let intervalID;\n  const init = () => {\n    const intervalListCount = localStorage.getItem('intervalListCount');\n    if (intervalListCount === null) localStorage.setItem('intervalListCount', 0);\n  };\n  useEffect(() => {\n    // Needs fixing, does not detect when a user has disconnected\n\n    init();\n    const connectionEstablished = localStorage.getItem('_connectionEstablished');\n    intervalID = setInterval(() => {\n      if (connectionEstablished && TableCache.getFill()) {\n        initialiseDashboard();\n        initialiseLock(false);\n        const sessionEndedCalled = localStorage.getItem('sessionEndedCalled');\n        if (sessionEndedCalled === null || sessionEndedCalled === undefined) {\n          localStorage.setItem('sessionEndedCalled', false);\n        }\n        const sessionEnded = localStorage.getItem('sessionEnded');\n        if (sessionEnded && !sessionEndedCalled) {\n          window.alert('Session is currently out of trading hours');\n          localStorage.removeItem('sessionEndedCalled');\n          localStorage.setItem('sessionEndedCalled', true);\n        }\n        clearInterval(intervalID);\n      }\n    }, 500);\n  }, []);\n  const initialiseDashboard = () => {\n    const dashboard = [];\n\n    /* dashboard.push(<DashboardNavbar\r\n         lock={lock}\r\n         dashboardTwo={dashboardTwo}\r\n         initialiseTableTwo={initialiseTableTwo}\r\n         temp={tempDashboard}\r\n         style={{ transform: 'translateX(20px)' }}\r\n     />);\r\n     */\n\n    setTempDashboard(dashboard);\n  };\n  useEffect(() => {\n    setLock(true);\n    setDashboardTwo(tempDashboard);\n  }, [lock]);\n  const initialiseLock = state => {\n    setInitialiseTableTwo(state);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DashboardContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, children => /*#__PURE__*/React.createElement(Container, {\n    children: children,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 22\n    }\n  })));\n};\nexport default DashboardOne;","map":{"version":3,"names":["React","Component","useState","useContext","useLayoutEffect","useEffect","Box","Button","ButtonGroup","TableCache","DashboardContext","Container","DashboardOne","children","lock","setLock","dashboardTwo","setDashboardTwo","initialiseTableTwo","setInitialiseTableTwo","tempDashboard","setTempDashboard","intervalID","init","intervalListCount","localStorage","getItem","setItem","connectionEstablished","setInterval","getFill","initialiseDashboard","initialiseLock","sessionEndedCalled","undefined","sessionEnded","window","alert","removeItem","clearInterval","dashboard","state","createElement","Fragment","Consumer","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/badsc/Documents/GitHub/trading-dashboard-local/src/main/DashboardOne.js"],"sourcesContent":["import React, { Component, useState, useContext, useLayoutEffect, useEffect } from 'react';\r\nimport { Box, Button, ButtonGroup } from \"@chakra-ui/react\";\r\n//import { DashboardNavbar } from './components/navbar/DashboardNavbar';\r\n\r\nimport TableCache from './cache/TableCache.js';\r\n//import StockPicker from './components/stockpicker/StockPicker';\r\n\r\nimport { DashboardContext } from './context/DashboardContext.js'\r\nimport Container from './back-test-data-handler/container/Container';\r\n\r\nconst DashboardOne = ({ children }) => {\r\n    const [lock, setLock] = useState(true);\r\n    const [dashboardTwo, setDashboardTwo] = useState([]);\r\n    const [initialiseTableTwo, setInitialiseTableTwo] = useState(false);\r\n    const [tempDashboard, setTempDashboard] = useState([]);\r\n\r\n    let intervalID;\r\n\r\n    const init = () => {\r\n\r\n        const intervalListCount = localStorage.getItem('intervalListCount');\r\n        \r\n        if(intervalListCount === null)\r\n            localStorage.setItem('intervalListCount', 0);\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        // Needs fixing, does not detect when a user has disconnected\r\n\r\n        init();\r\n\r\n        const connectionEstablished = localStorage.getItem('_connectionEstablished');\r\n        intervalID = setInterval(() => {\r\n            if (connectionEstablished && TableCache.getFill()) {\r\n                initialiseDashboard();\r\n                initialiseLock(false);\r\n\r\n                const sessionEndedCalled = localStorage.getItem('sessionEndedCalled');\r\n                if (sessionEndedCalled === null || sessionEndedCalled === undefined) {\r\n                    localStorage.setItem('sessionEndedCalled', false);\r\n                }\r\n\r\n                const sessionEnded = localStorage.getItem('sessionEnded');\r\n                if (sessionEnded && !sessionEndedCalled) {\r\n                    window.alert('Session is currently out of trading hours');\r\n                    localStorage.removeItem('sessionEndedCalled');\r\n                    localStorage.setItem('sessionEndedCalled', true);\r\n                }\r\n\r\n                clearInterval(intervalID);\r\n            }\r\n        }, 500);\r\n    }, [])\r\n\r\n    const initialiseDashboard = () => {\r\n        const dashboard = [];\r\n\r\n        /* dashboard.push(<DashboardNavbar\r\n             lock={lock}\r\n             dashboardTwo={dashboardTwo}\r\n             initialiseTableTwo={initialiseTableTwo}\r\n             temp={tempDashboard}\r\n             style={{ transform: 'translateX(20px)' }}\r\n         />);\r\n         */\r\n\r\n        setTempDashboard(dashboard);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLock(true);\r\n        setDashboardTwo(tempDashboard);\r\n    }, [lock])\r\n\r\n    const initialiseLock = (state) => {\r\n        setInitialiseTableTwo(state);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <DashboardContext.Consumer>\r\n                {children => (\r\n                     <Container children={children} />\r\n                )}\r\n            </DashboardContext.Consumer>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DashboardOne;"],"mappings":"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"},"metadata":{},"sourceType":"module"}