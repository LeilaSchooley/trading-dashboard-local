{"ast":null,"code":"/*!\n * has-own-deep <https://github.com/jonschlinkert/has-own-deep>\n *\n * Copyright (c) 2015-2018, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nconst hasOwn = Object.prototype.hasOwnProperty;\nconst isObject = require('isobject');\nmodule.exports = function (target, path) {\n  if (!isObject(target) && !Array.isArray(target)) {\n    throw new TypeError('expected the first argument to be an object or array');\n  }\n  if (typeof path !== 'string') {\n    throw new TypeError('expected object path to be a string');\n  }\n  if (hasOwn.call(target, path)) {\n    return true;\n  }\n  let segs = Array.isArray(path) ? path : path.split(/\\\\?\\./);\n  let obj = target;\n  while ((isObject(obj) || Array.isArray(obj)) && segs.length) {\n    if (hasOwn.call(obj, segs[0])) {\n      obj = obj[segs.shift()];\n      continue;\n    }\n    let rest = segs.slice();\n    let has = false;\n    do {\n      const prop = rest.join('.');\n      if (has = hasOwn.call(obj, prop)) {\n        segs = segs.slice(rest.length);\n        obj = obj[prop];\n        break;\n      }\n      rest.pop();\n    } while (rest.length);\n    if (!has) {\n      return false;\n    }\n  }\n  return true;\n};","map":{"version":3,"names":["hasOwn","Object","prototype","hasOwnProperty","isObject","require","module","exports","target","path","Array","isArray","TypeError","call","segs","split","obj","length","shift","rest","slice","has","prop","join","pop"],"sources":["C:/Users/badsc/Documents/GitHub/trading-dashboard-local/node_modules/has-own-deep/index.js"],"sourcesContent":["/*!\n * has-own-deep <https://github.com/jonschlinkert/has-own-deep>\n *\n * Copyright (c) 2015-2018, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nconst hasOwn = Object.prototype.hasOwnProperty;\nconst isObject = require('isobject');\n\nmodule.exports = function(target, path) {\n  if (!isObject(target) && !Array.isArray(target)) {\n    throw new TypeError('expected the first argument to be an object or array');\n  }\n\n  if (typeof path !== 'string') {\n    throw new TypeError('expected object path to be a string');\n  }\n\n  if (hasOwn.call(target, path)) {\n    return true;\n  }\n\n  let segs = Array.isArray(path) ? path : path.split(/\\\\?\\./);\n  let obj = target;\n\n  while ((isObject(obj) || Array.isArray(obj)) && segs.length) {\n    if (hasOwn.call(obj, segs[0])) {\n      obj = obj[segs.shift()];\n      continue;\n    }\n\n    let rest = segs.slice();\n    let has = false;\n\n    do {\n      const prop = rest.join('.');\n\n      if ((has = hasOwn.call(obj, prop))) {\n        segs = segs.slice(rest.length);\n        obj = obj[prop];\n        break;\n      }\n\n      rest.pop();\n    } while (rest.length);\n\n\n    if (!has) {\n      return false;\n    }\n  }\n\n  return true;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,MAAM,GAAGC,MAAM,CAACC,SAAS,CAACC,cAAc;AAC9C,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AAEpCC,MAAM,CAACC,OAAO,GAAG,UAASC,MAAM,EAAEC,IAAI,EAAE;EACtC,IAAI,CAACL,QAAQ,CAACI,MAAM,CAAC,IAAI,CAACE,KAAK,CAACC,OAAO,CAACH,MAAM,CAAC,EAAE;IAC/C,MAAM,IAAII,SAAS,CAAC,sDAAsD,CAAC;EAC7E;EAEA,IAAI,OAAOH,IAAI,KAAK,QAAQ,EAAE;IAC5B,MAAM,IAAIG,SAAS,CAAC,qCAAqC,CAAC;EAC5D;EAEA,IAAIZ,MAAM,CAACa,IAAI,CAACL,MAAM,EAAEC,IAAI,CAAC,EAAE;IAC7B,OAAO,IAAI;EACb;EAEA,IAAIK,IAAI,GAAGJ,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,GAAGA,IAAI,GAAGA,IAAI,CAACM,KAAK,CAAC,OAAO,CAAC;EAC3D,IAAIC,GAAG,GAAGR,MAAM;EAEhB,OAAO,CAACJ,QAAQ,CAACY,GAAG,CAAC,IAAIN,KAAK,CAACC,OAAO,CAACK,GAAG,CAAC,KAAKF,IAAI,CAACG,MAAM,EAAE;IAC3D,IAAIjB,MAAM,CAACa,IAAI,CAACG,GAAG,EAAEF,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;MAC7BE,GAAG,GAAGA,GAAG,CAACF,IAAI,CAACI,KAAK,CAAC,CAAC,CAAC;MACvB;IACF;IAEA,IAAIC,IAAI,GAAGL,IAAI,CAACM,KAAK,CAAC,CAAC;IACvB,IAAIC,GAAG,GAAG,KAAK;IAEf,GAAG;MACD,MAAMC,IAAI,GAAGH,IAAI,CAACI,IAAI,CAAC,GAAG,CAAC;MAE3B,IAAKF,GAAG,GAAGrB,MAAM,CAACa,IAAI,CAACG,GAAG,EAAEM,IAAI,CAAC,EAAG;QAClCR,IAAI,GAAGA,IAAI,CAACM,KAAK,CAACD,IAAI,CAACF,MAAM,CAAC;QAC9BD,GAAG,GAAGA,GAAG,CAACM,IAAI,CAAC;QACf;MACF;MAEAH,IAAI,CAACK,GAAG,CAAC,CAAC;IACZ,CAAC,QAAQL,IAAI,CAACF,MAAM;IAGpB,IAAI,CAACI,GAAG,EAAE;MACR,OAAO,KAAK;IACd;EACF;EAEA,OAAO,IAAI;AACb,CAAC"},"metadata":{},"sourceType":"script"}