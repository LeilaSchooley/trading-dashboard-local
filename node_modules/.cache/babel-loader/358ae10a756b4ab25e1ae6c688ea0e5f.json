{"ast":null,"code":"var _classCallCheck = require(\"C:\\\\Users\\\\badsc\\\\Documents\\\\GitHub\\\\trading-dashboard-local\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\badsc\\\\Documents\\\\GitHub\\\\trading-dashboard-local\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar configuration = require('./configuration');\nvar validColours = ['white', 'grey', 'black', 'blue', 'cyan', 'green', 'magenta', 'red', 'yellow'];\nvar Level = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function Level(level, levelStr, colour) {\n    _classCallCheck(this, Level);\n    this.level = level;\n    this.levelStr = levelStr;\n    this.colour = colour;\n  }\n  _createClass(Level, [{\n    key: \"toString\",\n    value: function toString() {\n      return this.levelStr;\n    }\n\n    /**\n     * converts given String to corresponding Level\n     * @param {(Level|string)} sArg -- String value of Level OR Log4js.Level\n     * @param {Level} [defaultLevel] -- default Level, if no String representation\n     * @return {Level}\n     */\n  }, {\n    key: \"isLessThanOrEqualTo\",\n    value: function isLessThanOrEqualTo(otherLevel) {\n      if (typeof otherLevel === 'string') {\n        otherLevel = Level.getLevel(otherLevel);\n      }\n      return this.level <= otherLevel.level;\n    }\n  }, {\n    key: \"isGreaterThanOrEqualTo\",\n    value: function isGreaterThanOrEqualTo(otherLevel) {\n      if (typeof otherLevel === 'string') {\n        otherLevel = Level.getLevel(otherLevel);\n      }\n      return this.level >= otherLevel.level;\n    }\n  }, {\n    key: \"isEqualTo\",\n    value: function isEqualTo(otherLevel) {\n      if (typeof otherLevel === 'string') {\n        otherLevel = Level.getLevel(otherLevel);\n      }\n      return this.level === otherLevel.level;\n    }\n  }], [{\n    key: \"getLevel\",\n    value: function getLevel(sArg, defaultLevel) {\n      if (!sArg) {\n        return defaultLevel;\n      }\n      if (sArg instanceof Level) {\n        return sArg;\n      }\n\n      // a json-serialised level won't be an instance of Level (see issue #768)\n      if (sArg instanceof Object && sArg.levelStr) {\n        sArg = sArg.levelStr;\n      }\n      return Level[sArg.toString().toUpperCase()] || defaultLevel;\n    }\n  }, {\n    key: \"addLevels\",\n    value: function addLevels(customLevels) {\n      if (customLevels) {\n        var levels = Object.keys(customLevels);\n        levels.forEach(function (l) {\n          var levelStr = l.toUpperCase();\n          Level[levelStr] = new Level(customLevels[l].value, levelStr, customLevels[l].colour);\n          var existingLevelIndex = Level.levels.findIndex(function (lvl) {\n            return lvl.levelStr === levelStr;\n          });\n          if (existingLevelIndex > -1) {\n            Level.levels[existingLevelIndex] = Level[levelStr];\n          } else {\n            Level.levels.push(Level[levelStr]);\n          }\n        });\n        Level.levels.sort(function (a, b) {\n          return a.level - b.level;\n        });\n      }\n    }\n  }]);\n  return Level;\n}();\nLevel.levels = [];\nLevel.addLevels({\n  ALL: {\n    value: Number.MIN_VALUE,\n    colour: 'grey'\n  },\n  TRACE: {\n    value: 5000,\n    colour: 'blue'\n  },\n  DEBUG: {\n    value: 10000,\n    colour: 'cyan'\n  },\n  INFO: {\n    value: 20000,\n    colour: 'green'\n  },\n  WARN: {\n    value: 30000,\n    colour: 'yellow'\n  },\n  ERROR: {\n    value: 40000,\n    colour: 'red'\n  },\n  FATAL: {\n    value: 50000,\n    colour: 'magenta'\n  },\n  MARK: {\n    value: 9007199254740992,\n    colour: 'grey'\n  },\n  // 2^53\n  OFF: {\n    value: Number.MAX_VALUE,\n    colour: 'grey'\n  }\n});\nconfiguration.addListener(function (config) {\n  var levelConfig = config.levels;\n  if (levelConfig) {\n    configuration.throwExceptionIf(config, configuration.not(configuration.anObject(levelConfig)), 'levels must be an object');\n    var newLevels = Object.keys(levelConfig);\n    newLevels.forEach(function (l) {\n      configuration.throwExceptionIf(config, configuration.not(configuration.validIdentifier(l)), \"level name \\\"\".concat(l, \"\\\" is not a valid identifier (must start with a letter, only contain A-Z,a-z,0-9,_)\"));\n      configuration.throwExceptionIf(config, configuration.not(configuration.anObject(levelConfig[l])), \"level \\\"\".concat(l, \"\\\" must be an object\"));\n      configuration.throwExceptionIf(config, configuration.not(levelConfig[l].value), \"level \\\"\".concat(l, \"\\\" must have a 'value' property\"));\n      configuration.throwExceptionIf(config, configuration.not(configuration.anInteger(levelConfig[l].value)), \"level \\\"\".concat(l, \"\\\".value must have an integer value\"));\n      configuration.throwExceptionIf(config, configuration.not(levelConfig[l].colour), \"level \\\"\".concat(l, \"\\\" must have a 'colour' property\"));\n      configuration.throwExceptionIf(config, configuration.not(validColours.indexOf(levelConfig[l].colour) > -1), \"level \\\"\".concat(l, \"\\\".colour must be one of \").concat(validColours.join(', ')));\n    });\n  }\n});\nconfiguration.addListener(function (config) {\n  Level.addLevels(config.levels);\n});\nmodule.exports = Level;","map":{"version":3,"names":["configuration","require","validColours","Level","level","levelStr","colour","_classCallCheck","_createClass","key","value","toString","isLessThanOrEqualTo","otherLevel","getLevel","isGreaterThanOrEqualTo","isEqualTo","sArg","defaultLevel","Object","toUpperCase","addLevels","customLevels","levels","keys","forEach","l","existingLevelIndex","findIndex","lvl","push","sort","a","b","ALL","Number","MIN_VALUE","TRACE","DEBUG","INFO","WARN","ERROR","FATAL","MARK","OFF","MAX_VALUE","addListener","config","levelConfig","throwExceptionIf","not","anObject","newLevels","validIdentifier","concat","anInteger","indexOf","join","module","exports"],"sources":["C:/Users/badsc/Documents/GitHub/trading-dashboard-local/node_modules/log4js/lib/levels.js"],"sourcesContent":["const configuration = require('./configuration');\n\nconst validColours = [\n  'white',\n  'grey',\n  'black',\n  'blue',\n  'cyan',\n  'green',\n  'magenta',\n  'red',\n  'yellow',\n];\n\nclass Level {\n  constructor(level, levelStr, colour) {\n    this.level = level;\n    this.levelStr = levelStr;\n    this.colour = colour;\n  }\n\n  toString() {\n    return this.levelStr;\n  }\n\n  /**\n   * converts given String to corresponding Level\n   * @param {(Level|string)} sArg -- String value of Level OR Log4js.Level\n   * @param {Level} [defaultLevel] -- default Level, if no String representation\n   * @return {Level}\n   */\n  static getLevel(sArg, defaultLevel) {\n    if (!sArg) {\n      return defaultLevel;\n    }\n\n    if (sArg instanceof Level) {\n      return sArg;\n    }\n\n    // a json-serialised level won't be an instance of Level (see issue #768)\n    if (sArg instanceof Object && sArg.levelStr) {\n      sArg = sArg.levelStr;\n    }\n\n    return Level[sArg.toString().toUpperCase()] || defaultLevel;\n  }\n\n  static addLevels(customLevels) {\n    if (customLevels) {\n      const levels = Object.keys(customLevels);\n      levels.forEach((l) => {\n        const levelStr = l.toUpperCase();\n        Level[levelStr] = new Level(\n          customLevels[l].value,\n          levelStr,\n          customLevels[l].colour\n        );\n        const existingLevelIndex = Level.levels.findIndex(\n          (lvl) => lvl.levelStr === levelStr\n        );\n        if (existingLevelIndex > -1) {\n          Level.levels[existingLevelIndex] = Level[levelStr];\n        } else {\n          Level.levels.push(Level[levelStr]);\n        }\n      });\n      Level.levels.sort((a, b) => a.level - b.level);\n    }\n  }\n\n  isLessThanOrEqualTo(otherLevel) {\n    if (typeof otherLevel === 'string') {\n      otherLevel = Level.getLevel(otherLevel);\n    }\n    return this.level <= otherLevel.level;\n  }\n\n  isGreaterThanOrEqualTo(otherLevel) {\n    if (typeof otherLevel === 'string') {\n      otherLevel = Level.getLevel(otherLevel);\n    }\n    return this.level >= otherLevel.level;\n  }\n\n  isEqualTo(otherLevel) {\n    if (typeof otherLevel === 'string') {\n      otherLevel = Level.getLevel(otherLevel);\n    }\n    return this.level === otherLevel.level;\n  }\n}\n\nLevel.levels = [];\nLevel.addLevels({\n  ALL: { value: Number.MIN_VALUE, colour: 'grey' },\n  TRACE: { value: 5000, colour: 'blue' },\n  DEBUG: { value: 10000, colour: 'cyan' },\n  INFO: { value: 20000, colour: 'green' },\n  WARN: { value: 30000, colour: 'yellow' },\n  ERROR: { value: 40000, colour: 'red' },\n  FATAL: { value: 50000, colour: 'magenta' },\n  MARK: { value: 9007199254740992, colour: 'grey' }, // 2^53\n  OFF: { value: Number.MAX_VALUE, colour: 'grey' },\n});\n\nconfiguration.addListener((config) => {\n  const levelConfig = config.levels;\n  if (levelConfig) {\n    configuration.throwExceptionIf(\n      config,\n      configuration.not(configuration.anObject(levelConfig)),\n      'levels must be an object'\n    );\n    const newLevels = Object.keys(levelConfig);\n    newLevels.forEach((l) => {\n      configuration.throwExceptionIf(\n        config,\n        configuration.not(configuration.validIdentifier(l)),\n        `level name \"${l}\" is not a valid identifier (must start with a letter, only contain A-Z,a-z,0-9,_)`\n      );\n      configuration.throwExceptionIf(\n        config,\n        configuration.not(configuration.anObject(levelConfig[l])),\n        `level \"${l}\" must be an object`\n      );\n      configuration.throwExceptionIf(\n        config,\n        configuration.not(levelConfig[l].value),\n        `level \"${l}\" must have a 'value' property`\n      );\n      configuration.throwExceptionIf(\n        config,\n        configuration.not(configuration.anInteger(levelConfig[l].value)),\n        `level \"${l}\".value must have an integer value`\n      );\n      configuration.throwExceptionIf(\n        config,\n        configuration.not(levelConfig[l].colour),\n        `level \"${l}\" must have a 'colour' property`\n      );\n      configuration.throwExceptionIf(\n        config,\n        configuration.not(validColours.indexOf(levelConfig[l].colour) > -1),\n        `level \"${l}\".colour must be one of ${validColours.join(', ')}`\n      );\n    });\n  }\n});\n\nconfiguration.addListener((config) => {\n  Level.addLevels(config.levels);\n});\n\nmodule.exports = Level;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}