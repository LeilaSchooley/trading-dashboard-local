{"ast":null,"code":"var _objectSpread = require(\"C:\\\\Users\\\\badsc\\\\Documents\\\\GitHub\\\\trading-dashboard-local\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread2\");\nvar debug = require('debug')('log4js:categories');\nvar configuration = require('./configuration');\nvar levels = require('./levels');\nvar appenders = require('./appenders');\nvar categories = new Map();\n\n/**\n * Add inherited config to this category.  That includes extra appenders from parent,\n * and level, if none is set on this category.\n * This is recursive, so each parent also gets loaded with inherited appenders.\n * Inheritance is blocked if a category has inherit=false\n * @param  {*} config\n * @param  {*} category the child category\n * @param  {string} categoryName dotted path to category\n * @return {void}\n */\nfunction inheritFromParent(config, category, categoryName) {\n  if (category.inherit === false) return;\n  var lastDotIndex = categoryName.lastIndexOf('.');\n  if (lastDotIndex < 0) return; // category is not a child\n  var parentCategoryName = categoryName.slice(0, lastDotIndex);\n  var parentCategory = config.categories[parentCategoryName];\n  if (!parentCategory) {\n    // parent is missing, so implicitly create it, so that it can inherit from its parents\n    parentCategory = {\n      inherit: true,\n      appenders: []\n    };\n  }\n\n  // make sure parent has had its inheritance taken care of before pulling its properties to this child\n  inheritFromParent(config, parentCategory, parentCategoryName);\n\n  // if the parent is not in the config (because we just created it above),\n  // and it inherited a valid configuration, add it to config.categories\n  if (!config.categories[parentCategoryName] && parentCategory.appenders && parentCategory.appenders.length && parentCategory.level) {\n    config.categories[parentCategoryName] = parentCategory;\n  }\n  category.appenders = category.appenders || [];\n  category.level = category.level || parentCategory.level;\n\n  // merge in appenders from parent (parent is already holding its inherited appenders)\n  parentCategory.appenders.forEach(function (ap) {\n    if (!category.appenders.includes(ap)) {\n      category.appenders.push(ap);\n    }\n  });\n  category.parent = parentCategory;\n}\n\n/**\n * Walk all categories in the config, and pull down any configuration from parent to child.\n * This includes inherited appenders, and level, where level is not set.\n * Inheritance is skipped where a category has inherit=false.\n * @param  {*} config\n */\nfunction addCategoryInheritance(config) {\n  if (!config.categories) return;\n  var categoryNames = Object.keys(config.categories);\n  categoryNames.forEach(function (name) {\n    var category = config.categories[name];\n    // add inherited appenders and level to this category\n    inheritFromParent(config, category, name);\n  });\n}\nconfiguration.addPreProcessingListener(function (config) {\n  return addCategoryInheritance(config);\n});\nconfiguration.addListener(function (config) {\n  configuration.throwExceptionIf(config, configuration.not(configuration.anObject(config.categories)), 'must have a property \"categories\" of type object.');\n  var categoryNames = Object.keys(config.categories);\n  configuration.throwExceptionIf(config, configuration.not(categoryNames.length), 'must define at least one category.');\n  categoryNames.forEach(function (name) {\n    var category = config.categories[name];\n    configuration.throwExceptionIf(config, [configuration.not(category.appenders), configuration.not(category.level)], \"category \\\"\".concat(name, \"\\\" is not valid (must be an object with properties \\\"appenders\\\" and \\\"level\\\")\"));\n    configuration.throwExceptionIf(config, configuration.not(Array.isArray(category.appenders)), \"category \\\"\".concat(name, \"\\\" is not valid (appenders must be an array of appender names)\"));\n    configuration.throwExceptionIf(config, configuration.not(category.appenders.length), \"category \\\"\".concat(name, \"\\\" is not valid (appenders must contain at least one appender name)\"));\n    if (Object.prototype.hasOwnProperty.call(category, 'enableCallStack')) {\n      configuration.throwExceptionIf(config, typeof category.enableCallStack !== 'boolean', \"category \\\"\".concat(name, \"\\\" is not valid (enableCallStack must be boolean type)\"));\n    }\n    category.appenders.forEach(function (appender) {\n      configuration.throwExceptionIf(config, configuration.not(appenders.get(appender)), \"category \\\"\".concat(name, \"\\\" is not valid (appender \\\"\").concat(appender, \"\\\" is not defined)\"));\n    });\n    configuration.throwExceptionIf(config, configuration.not(levels.getLevel(category.level)), \"category \\\"\".concat(name, \"\\\" is not valid (level \\\"\").concat(category.level, \"\\\" not recognised;\") + \" valid levels are \".concat(levels.levels.join(', '), \")\"));\n  });\n  configuration.throwExceptionIf(config, configuration.not(config.categories.default), 'must define a \"default\" category.');\n});\nvar setup = function setup(config) {\n  categories.clear();\n  if (!config) {\n    return;\n  }\n  var categoryNames = Object.keys(config.categories);\n  categoryNames.forEach(function (name) {\n    var category = config.categories[name];\n    var categoryAppenders = [];\n    category.appenders.forEach(function (appender) {\n      categoryAppenders.push(appenders.get(appender));\n      debug(\"Creating category \".concat(name));\n      categories.set(name, {\n        appenders: categoryAppenders,\n        level: levels.getLevel(category.level),\n        enableCallStack: category.enableCallStack || false\n      });\n    });\n  });\n};\nvar init = function init() {\n  setup();\n};\ninit();\nconfiguration.addListener(setup);\nvar configForCategory = function configForCategory(category) {\n  debug(\"configForCategory: searching for config for \".concat(category));\n  if (categories.has(category)) {\n    debug(\"configForCategory: \".concat(category, \" exists in config, returning it\"));\n    return categories.get(category);\n  }\n  var sourceCategoryConfig;\n  if (category.indexOf('.') > 0) {\n    debug(\"configForCategory: \".concat(category, \" has hierarchy, cloning from parents\"));\n    sourceCategoryConfig = _objectSpread({}, configForCategory(category.slice(0, category.lastIndexOf('.'))));\n  } else {\n    if (!categories.has('default')) {\n      setup({\n        categories: {\n          default: {\n            appenders: ['out'],\n            level: 'OFF'\n          }\n        }\n      });\n    }\n    debug('configForCategory: cloning default category');\n    sourceCategoryConfig = _objectSpread({}, categories.get('default'));\n  }\n  categories.set(category, sourceCategoryConfig);\n  return sourceCategoryConfig;\n};\nvar appendersForCategory = function appendersForCategory(category) {\n  return configForCategory(category).appenders;\n};\nvar getLevelForCategory = function getLevelForCategory(category) {\n  return configForCategory(category).level;\n};\nvar setLevelForCategory = function setLevelForCategory(category, level) {\n  configForCategory(category).level = level;\n};\nvar getEnableCallStackForCategory = function getEnableCallStackForCategory(category) {\n  return configForCategory(category).enableCallStack === true;\n};\nvar setEnableCallStackForCategory = function setEnableCallStackForCategory(category, useCallStack) {\n  configForCategory(category).enableCallStack = useCallStack;\n};\nmodule.exports = categories;\nmodule.exports = Object.assign(module.exports, {\n  appendersForCategory: appendersForCategory,\n  getLevelForCategory: getLevelForCategory,\n  setLevelForCategory: setLevelForCategory,\n  getEnableCallStackForCategory: getEnableCallStackForCategory,\n  setEnableCallStackForCategory: setEnableCallStackForCategory,\n  init: init\n});","map":{"version":3,"names":["debug","require","configuration","levels","appenders","categories","Map","inheritFromParent","config","category","categoryName","inherit","lastDotIndex","lastIndexOf","parentCategoryName","slice","parentCategory","length","level","forEach","ap","includes","push","parent","addCategoryInheritance","categoryNames","Object","keys","name","addPreProcessingListener","addListener","throwExceptionIf","not","anObject","concat","Array","isArray","prototype","hasOwnProperty","call","enableCallStack","appender","get","getLevel","join","default","setup","clear","categoryAppenders","set","init","configForCategory","has","sourceCategoryConfig","indexOf","_objectSpread","appendersForCategory","getLevelForCategory","setLevelForCategory","getEnableCallStackForCategory","setEnableCallStackForCategory","useCallStack","module","exports","assign"],"sources":["C:/Users/badsc/Documents/GitHub/trading-dashboard-local/node_modules/log4js/lib/categories.js"],"sourcesContent":["const debug = require('debug')('log4js:categories');\nconst configuration = require('./configuration');\nconst levels = require('./levels');\nconst appenders = require('./appenders');\n\nconst categories = new Map();\n\n/**\n * Add inherited config to this category.  That includes extra appenders from parent,\n * and level, if none is set on this category.\n * This is recursive, so each parent also gets loaded with inherited appenders.\n * Inheritance is blocked if a category has inherit=false\n * @param  {*} config\n * @param  {*} category the child category\n * @param  {string} categoryName dotted path to category\n * @return {void}\n */\nfunction inheritFromParent(config, category, categoryName) {\n  if (category.inherit === false) return;\n  const lastDotIndex = categoryName.lastIndexOf('.');\n  if (lastDotIndex < 0) return; // category is not a child\n  const parentCategoryName = categoryName.slice(0, lastDotIndex);\n  let parentCategory = config.categories[parentCategoryName];\n\n  if (!parentCategory) {\n    // parent is missing, so implicitly create it, so that it can inherit from its parents\n    parentCategory = { inherit: true, appenders: [] };\n  }\n\n  // make sure parent has had its inheritance taken care of before pulling its properties to this child\n  inheritFromParent(config, parentCategory, parentCategoryName);\n\n  // if the parent is not in the config (because we just created it above),\n  // and it inherited a valid configuration, add it to config.categories\n  if (\n    !config.categories[parentCategoryName] &&\n    parentCategory.appenders &&\n    parentCategory.appenders.length &&\n    parentCategory.level\n  ) {\n    config.categories[parentCategoryName] = parentCategory;\n  }\n\n  category.appenders = category.appenders || [];\n  category.level = category.level || parentCategory.level;\n\n  // merge in appenders from parent (parent is already holding its inherited appenders)\n  parentCategory.appenders.forEach((ap) => {\n    if (!category.appenders.includes(ap)) {\n      category.appenders.push(ap);\n    }\n  });\n  category.parent = parentCategory;\n}\n\n/**\n * Walk all categories in the config, and pull down any configuration from parent to child.\n * This includes inherited appenders, and level, where level is not set.\n * Inheritance is skipped where a category has inherit=false.\n * @param  {*} config\n */\nfunction addCategoryInheritance(config) {\n  if (!config.categories) return;\n  const categoryNames = Object.keys(config.categories);\n  categoryNames.forEach((name) => {\n    const category = config.categories[name];\n    // add inherited appenders and level to this category\n    inheritFromParent(config, category, name);\n  });\n}\n\nconfiguration.addPreProcessingListener((config) =>\n  addCategoryInheritance(config)\n);\n\nconfiguration.addListener((config) => {\n  configuration.throwExceptionIf(\n    config,\n    configuration.not(configuration.anObject(config.categories)),\n    'must have a property \"categories\" of type object.'\n  );\n\n  const categoryNames = Object.keys(config.categories);\n  configuration.throwExceptionIf(\n    config,\n    configuration.not(categoryNames.length),\n    'must define at least one category.'\n  );\n\n  categoryNames.forEach((name) => {\n    const category = config.categories[name];\n    configuration.throwExceptionIf(\n      config,\n      [\n        configuration.not(category.appenders),\n        configuration.not(category.level),\n      ],\n      `category \"${name}\" is not valid (must be an object with properties \"appenders\" and \"level\")`\n    );\n\n    configuration.throwExceptionIf(\n      config,\n      configuration.not(Array.isArray(category.appenders)),\n      `category \"${name}\" is not valid (appenders must be an array of appender names)`\n    );\n\n    configuration.throwExceptionIf(\n      config,\n      configuration.not(category.appenders.length),\n      `category \"${name}\" is not valid (appenders must contain at least one appender name)`\n    );\n\n    if (Object.prototype.hasOwnProperty.call(category, 'enableCallStack')) {\n      configuration.throwExceptionIf(\n        config,\n        typeof category.enableCallStack !== 'boolean',\n        `category \"${name}\" is not valid (enableCallStack must be boolean type)`\n      );\n    }\n\n    category.appenders.forEach((appender) => {\n      configuration.throwExceptionIf(\n        config,\n        configuration.not(appenders.get(appender)),\n        `category \"${name}\" is not valid (appender \"${appender}\" is not defined)`\n      );\n    });\n\n    configuration.throwExceptionIf(\n      config,\n      configuration.not(levels.getLevel(category.level)),\n      `category \"${name}\" is not valid (level \"${category.level}\" not recognised;` +\n        ` valid levels are ${levels.levels.join(', ')})`\n    );\n  });\n\n  configuration.throwExceptionIf(\n    config,\n    configuration.not(config.categories.default),\n    'must define a \"default\" category.'\n  );\n});\n\nconst setup = (config) => {\n  categories.clear();\n  if (!config) {\n    return;\n  }\n\n  const categoryNames = Object.keys(config.categories);\n  categoryNames.forEach((name) => {\n    const category = config.categories[name];\n    const categoryAppenders = [];\n    category.appenders.forEach((appender) => {\n      categoryAppenders.push(appenders.get(appender));\n      debug(`Creating category ${name}`);\n      categories.set(name, {\n        appenders: categoryAppenders,\n        level: levels.getLevel(category.level),\n        enableCallStack: category.enableCallStack || false,\n      });\n    });\n  });\n};\n\nconst init = () => {\n  setup();\n};\ninit();\n\nconfiguration.addListener(setup);\n\nconst configForCategory = (category) => {\n  debug(`configForCategory: searching for config for ${category}`);\n  if (categories.has(category)) {\n    debug(`configForCategory: ${category} exists in config, returning it`);\n    return categories.get(category);\n  }\n\n  let sourceCategoryConfig;\n  if (category.indexOf('.') > 0) {\n    debug(`configForCategory: ${category} has hierarchy, cloning from parents`);\n    sourceCategoryConfig = {\n      ...configForCategory(category.slice(0, category.lastIndexOf('.'))),\n    };\n  } else {\n    if (!categories.has('default')) {\n      setup({ categories: { default: { appenders: ['out'], level: 'OFF' } } });\n    }\n    debug('configForCategory: cloning default category');\n    sourceCategoryConfig = { ...categories.get('default') };\n  }\n  categories.set(category, sourceCategoryConfig);\n  return sourceCategoryConfig;\n};\n\nconst appendersForCategory = (category) =>\n  configForCategory(category).appenders;\n\nconst getLevelForCategory = (category) => configForCategory(category).level;\nconst setLevelForCategory = (category, level) => {\n  configForCategory(category).level = level;\n};\n\nconst getEnableCallStackForCategory = (category) =>\n  configForCategory(category).enableCallStack === true;\nconst setEnableCallStackForCategory = (category, useCallStack) => {\n  configForCategory(category).enableCallStack = useCallStack;\n};\n\nmodule.exports = categories;\nmodule.exports = Object.assign(module.exports, {\n  appendersForCategory,\n  getLevelForCategory,\n  setLevelForCategory,\n  getEnableCallStackForCategory,\n  setEnableCallStackForCategory,\n  init,\n});\n"],"mappings":";AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC,CAAC,mBAAmB,CAAC;AACnD,IAAMC,aAAa,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAChD,IAAME,MAAM,GAAGF,OAAO,CAAC,UAAU,CAAC;AAClC,IAAMG,SAAS,GAAGH,OAAO,CAAC,aAAa,CAAC;AAExC,IAAMI,UAAU,GAAG,IAAIC,GAAG,CAAC,CAAC;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,iBAAiBA,CAACC,MAAM,EAAEC,QAAQ,EAAEC,YAAY,EAAE;EACzD,IAAID,QAAQ,CAACE,OAAO,KAAK,KAAK,EAAE;EAChC,IAAMC,YAAY,GAAGF,YAAY,CAACG,WAAW,CAAC,GAAG,CAAC;EAClD,IAAID,YAAY,GAAG,CAAC,EAAE,OAAO,CAAC;EAC9B,IAAME,kBAAkB,GAAGJ,YAAY,CAACK,KAAK,CAAC,CAAC,EAAEH,YAAY,CAAC;EAC9D,IAAII,cAAc,GAAGR,MAAM,CAACH,UAAU,CAACS,kBAAkB,CAAC;EAE1D,IAAI,CAACE,cAAc,EAAE;IACnB;IACAA,cAAc,GAAG;MAAEL,OAAO,EAAE,IAAI;MAAEP,SAAS,EAAE;IAAG,CAAC;EACnD;;EAEA;EACAG,iBAAiB,CAACC,MAAM,EAAEQ,cAAc,EAAEF,kBAAkB,CAAC;;EAE7D;EACA;EACA,IACE,CAACN,MAAM,CAACH,UAAU,CAACS,kBAAkB,CAAC,IACtCE,cAAc,CAACZ,SAAS,IACxBY,cAAc,CAACZ,SAAS,CAACa,MAAM,IAC/BD,cAAc,CAACE,KAAK,EACpB;IACAV,MAAM,CAACH,UAAU,CAACS,kBAAkB,CAAC,GAAGE,cAAc;EACxD;EAEAP,QAAQ,CAACL,SAAS,GAAGK,QAAQ,CAACL,SAAS,IAAI,EAAE;EAC7CK,QAAQ,CAACS,KAAK,GAAGT,QAAQ,CAACS,KAAK,IAAIF,cAAc,CAACE,KAAK;;EAEvD;EACAF,cAAc,CAACZ,SAAS,CAACe,OAAO,CAAC,UAACC,EAAE,EAAK;IACvC,IAAI,CAACX,QAAQ,CAACL,SAAS,CAACiB,QAAQ,CAACD,EAAE,CAAC,EAAE;MACpCX,QAAQ,CAACL,SAAS,CAACkB,IAAI,CAACF,EAAE,CAAC;IAC7B;EACF,CAAC,CAAC;EACFX,QAAQ,CAACc,MAAM,GAAGP,cAAc;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASQ,sBAAsBA,CAAChB,MAAM,EAAE;EACtC,IAAI,CAACA,MAAM,CAACH,UAAU,EAAE;EACxB,IAAMoB,aAAa,GAAGC,MAAM,CAACC,IAAI,CAACnB,MAAM,CAACH,UAAU,CAAC;EACpDoB,aAAa,CAACN,OAAO,CAAC,UAACS,IAAI,EAAK;IAC9B,IAAMnB,QAAQ,GAAGD,MAAM,CAACH,UAAU,CAACuB,IAAI,CAAC;IACxC;IACArB,iBAAiB,CAACC,MAAM,EAAEC,QAAQ,EAAEmB,IAAI,CAAC;EAC3C,CAAC,CAAC;AACJ;AAEA1B,aAAa,CAAC2B,wBAAwB,CAAC,UAACrB,MAAM;EAAA,OAC5CgB,sBAAsB,CAAChB,MAAM,CAAC;AAAA,CAChC,CAAC;AAEDN,aAAa,CAAC4B,WAAW,CAAC,UAACtB,MAAM,EAAK;EACpCN,aAAa,CAAC6B,gBAAgB,CAC5BvB,MAAM,EACNN,aAAa,CAAC8B,GAAG,CAAC9B,aAAa,CAAC+B,QAAQ,CAACzB,MAAM,CAACH,UAAU,CAAC,CAAC,EAC5D,mDACF,CAAC;EAED,IAAMoB,aAAa,GAAGC,MAAM,CAACC,IAAI,CAACnB,MAAM,CAACH,UAAU,CAAC;EACpDH,aAAa,CAAC6B,gBAAgB,CAC5BvB,MAAM,EACNN,aAAa,CAAC8B,GAAG,CAACP,aAAa,CAACR,MAAM,CAAC,EACvC,oCACF,CAAC;EAEDQ,aAAa,CAACN,OAAO,CAAC,UAACS,IAAI,EAAK;IAC9B,IAAMnB,QAAQ,GAAGD,MAAM,CAACH,UAAU,CAACuB,IAAI,CAAC;IACxC1B,aAAa,CAAC6B,gBAAgB,CAC5BvB,MAAM,EACN,CACEN,aAAa,CAAC8B,GAAG,CAACvB,QAAQ,CAACL,SAAS,CAAC,EACrCF,aAAa,CAAC8B,GAAG,CAACvB,QAAQ,CAACS,KAAK,CAAC,CAClC,gBAAAgB,MAAA,CACYN,IAAI,oFACnB,CAAC;IAED1B,aAAa,CAAC6B,gBAAgB,CAC5BvB,MAAM,EACNN,aAAa,CAAC8B,GAAG,CAACG,KAAK,CAACC,OAAO,CAAC3B,QAAQ,CAACL,SAAS,CAAC,CAAC,gBAAA8B,MAAA,CACvCN,IAAI,mEACnB,CAAC;IAED1B,aAAa,CAAC6B,gBAAgB,CAC5BvB,MAAM,EACNN,aAAa,CAAC8B,GAAG,CAACvB,QAAQ,CAACL,SAAS,CAACa,MAAM,CAAC,gBAAAiB,MAAA,CAC/BN,IAAI,wEACnB,CAAC;IAED,IAAIF,MAAM,CAACW,SAAS,CAACC,cAAc,CAACC,IAAI,CAAC9B,QAAQ,EAAE,iBAAiB,CAAC,EAAE;MACrEP,aAAa,CAAC6B,gBAAgB,CAC5BvB,MAAM,EACN,OAAOC,QAAQ,CAAC+B,eAAe,KAAK,SAAS,gBAAAN,MAAA,CAChCN,IAAI,2DACnB,CAAC;IACH;IAEAnB,QAAQ,CAACL,SAAS,CAACe,OAAO,CAAC,UAACsB,QAAQ,EAAK;MACvCvC,aAAa,CAAC6B,gBAAgB,CAC5BvB,MAAM,EACNN,aAAa,CAAC8B,GAAG,CAAC5B,SAAS,CAACsC,GAAG,CAACD,QAAQ,CAAC,CAAC,gBAAAP,MAAA,CAC7BN,IAAI,kCAAAM,MAAA,CAA6BO,QAAQ,uBACxD,CAAC;IACH,CAAC,CAAC;IAEFvC,aAAa,CAAC6B,gBAAgB,CAC5BvB,MAAM,EACNN,aAAa,CAAC8B,GAAG,CAAC7B,MAAM,CAACwC,QAAQ,CAAClC,QAAQ,CAACS,KAAK,CAAC,CAAC,EAClD,cAAAgB,MAAA,CAAaN,IAAI,+BAAAM,MAAA,CAA0BzB,QAAQ,CAACS,KAAK,+CAAAgB,MAAA,CAClC/B,MAAM,CAACA,MAAM,CAACyC,IAAI,CAAC,IAAI,CAAC,MACjD,CAAC;EACH,CAAC,CAAC;EAEF1C,aAAa,CAAC6B,gBAAgB,CAC5BvB,MAAM,EACNN,aAAa,CAAC8B,GAAG,CAACxB,MAAM,CAACH,UAAU,CAACwC,OAAO,CAAC,EAC5C,mCACF,CAAC;AACH,CAAC,CAAC;AAEF,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAItC,MAAM,EAAK;EACxBH,UAAU,CAAC0C,KAAK,CAAC,CAAC;EAClB,IAAI,CAACvC,MAAM,EAAE;IACX;EACF;EAEA,IAAMiB,aAAa,GAAGC,MAAM,CAACC,IAAI,CAACnB,MAAM,CAACH,UAAU,CAAC;EACpDoB,aAAa,CAACN,OAAO,CAAC,UAACS,IAAI,EAAK;IAC9B,IAAMnB,QAAQ,GAAGD,MAAM,CAACH,UAAU,CAACuB,IAAI,CAAC;IACxC,IAAMoB,iBAAiB,GAAG,EAAE;IAC5BvC,QAAQ,CAACL,SAAS,CAACe,OAAO,CAAC,UAACsB,QAAQ,EAAK;MACvCO,iBAAiB,CAAC1B,IAAI,CAAClB,SAAS,CAACsC,GAAG,CAACD,QAAQ,CAAC,CAAC;MAC/CzC,KAAK,sBAAAkC,MAAA,CAAsBN,IAAI,CAAE,CAAC;MAClCvB,UAAU,CAAC4C,GAAG,CAACrB,IAAI,EAAE;QACnBxB,SAAS,EAAE4C,iBAAiB;QAC5B9B,KAAK,EAAEf,MAAM,CAACwC,QAAQ,CAAClC,QAAQ,CAACS,KAAK,CAAC;QACtCsB,eAAe,EAAE/B,QAAQ,CAAC+B,eAAe,IAAI;MAC/C,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC;AAED,IAAMU,IAAI,GAAG,SAAPA,IAAIA,CAAA,EAAS;EACjBJ,KAAK,CAAC,CAAC;AACT,CAAC;AACDI,IAAI,CAAC,CAAC;AAENhD,aAAa,CAAC4B,WAAW,CAACgB,KAAK,CAAC;AAEhC,IAAMK,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAI1C,QAAQ,EAAK;EACtCT,KAAK,gDAAAkC,MAAA,CAAgDzB,QAAQ,CAAE,CAAC;EAChE,IAAIJ,UAAU,CAAC+C,GAAG,CAAC3C,QAAQ,CAAC,EAAE;IAC5BT,KAAK,uBAAAkC,MAAA,CAAuBzB,QAAQ,oCAAiC,CAAC;IACtE,OAAOJ,UAAU,CAACqC,GAAG,CAACjC,QAAQ,CAAC;EACjC;EAEA,IAAI4C,oBAAoB;EACxB,IAAI5C,QAAQ,CAAC6C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;IAC7BtD,KAAK,uBAAAkC,MAAA,CAAuBzB,QAAQ,yCAAsC,CAAC;IAC3E4C,oBAAoB,GAAAE,aAAA,KACfJ,iBAAiB,CAAC1C,QAAQ,CAACM,KAAK,CAAC,CAAC,EAAEN,QAAQ,CAACI,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CACnE;EACH,CAAC,MAAM;IACL,IAAI,CAACR,UAAU,CAAC+C,GAAG,CAAC,SAAS,CAAC,EAAE;MAC9BN,KAAK,CAAC;QAAEzC,UAAU,EAAE;UAAEwC,OAAO,EAAE;YAAEzC,SAAS,EAAE,CAAC,KAAK,CAAC;YAAEc,KAAK,EAAE;UAAM;QAAE;MAAE,CAAC,CAAC;IAC1E;IACAlB,KAAK,CAAC,6CAA6C,CAAC;IACpDqD,oBAAoB,GAAAE,aAAA,KAAQlD,UAAU,CAACqC,GAAG,CAAC,SAAS,CAAC,CAAE;EACzD;EACArC,UAAU,CAAC4C,GAAG,CAACxC,QAAQ,EAAE4C,oBAAoB,CAAC;EAC9C,OAAOA,oBAAoB;AAC7B,CAAC;AAED,IAAMG,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAI/C,QAAQ;EAAA,OACpC0C,iBAAiB,CAAC1C,QAAQ,CAAC,CAACL,SAAS;AAAA;AAEvC,IAAMqD,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIhD,QAAQ;EAAA,OAAK0C,iBAAiB,CAAC1C,QAAQ,CAAC,CAACS,KAAK;AAAA;AAC3E,IAAMwC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIjD,QAAQ,EAAES,KAAK,EAAK;EAC/CiC,iBAAiB,CAAC1C,QAAQ,CAAC,CAACS,KAAK,GAAGA,KAAK;AAC3C,CAAC;AAED,IAAMyC,6BAA6B,GAAG,SAAhCA,6BAA6BA,CAAIlD,QAAQ;EAAA,OAC7C0C,iBAAiB,CAAC1C,QAAQ,CAAC,CAAC+B,eAAe,KAAK,IAAI;AAAA;AACtD,IAAMoB,6BAA6B,GAAG,SAAhCA,6BAA6BA,CAAInD,QAAQ,EAAEoD,YAAY,EAAK;EAChEV,iBAAiB,CAAC1C,QAAQ,CAAC,CAAC+B,eAAe,GAAGqB,YAAY;AAC5D,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAG1D,UAAU;AAC3ByD,MAAM,CAACC,OAAO,GAAGrC,MAAM,CAACsC,MAAM,CAACF,MAAM,CAACC,OAAO,EAAE;EAC7CP,oBAAoB,EAApBA,oBAAoB;EACpBC,mBAAmB,EAAnBA,mBAAmB;EACnBC,mBAAmB,EAAnBA,mBAAmB;EACnBC,6BAA6B,EAA7BA,6BAA6B;EAC7BC,6BAA6B,EAA7BA,6BAA6B;EAC7BV,IAAI,EAAJA;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"script"}