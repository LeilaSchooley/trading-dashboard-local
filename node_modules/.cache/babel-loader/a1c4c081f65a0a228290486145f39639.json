{"ast":null,"code":"var _classCallCheck = require(\"C:\\\\Users\\\\badsc\\\\Documents\\\\GitHub\\\\trading-dashboard-local\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\badsc\\\\Documents\\\\GitHub\\\\trading-dashboard-local\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n/* eslint max-classes-per-file: [\"error\", 2] */\n/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_getLocationKeys\"] }] */\n\nvar flatted = require('flatted');\nvar levels = require('./levels');\nvar SerDe = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function SerDe() {\n    var _this = this;\n    _classCallCheck(this, SerDe);\n    var deserialise = {\n      __LOG4JS_undefined__: undefined,\n      __LOG4JS_NaN__: Number('abc'),\n      __LOG4JS_Infinity__: 1 / 0,\n      '__LOG4JS_-Infinity__': -1 / 0\n    };\n    this.deMap = deserialise;\n    this.serMap = {};\n    Object.keys(this.deMap).forEach(function (key) {\n      var value = _this.deMap[key];\n      _this.serMap[value] = key;\n    });\n  }\n  _createClass(SerDe, [{\n    key: \"canSerialise\",\n    value: function canSerialise(key) {\n      if (typeof key === 'string') return false;\n      return key in this.serMap;\n    }\n  }, {\n    key: \"serialise\",\n    value: function serialise(key) {\n      if (this.canSerialise(key)) return this.serMap[key];\n      return key;\n    }\n  }, {\n    key: \"canDeserialise\",\n    value: function canDeserialise(key) {\n      return key in this.deMap;\n    }\n  }, {\n    key: \"deserialise\",\n    value: function deserialise(key) {\n      if (this.canDeserialise(key)) return this.deMap[key];\n      return key;\n    }\n  }]);\n  return SerDe;\n}();\nvar serde = new SerDe();\n\n/**\n * @name LoggingEvent\n * @namespace Log4js\n */\nvar LoggingEvent = /*#__PURE__*/function () {\n  \"use strict\";\n\n  /**\n   * Models a logging event.\n   * @constructor\n   * @param {string} categoryName name of category\n   * @param {Log4js.Level} level level of message\n   * @param {Array} data objects to log\n   * @param {Error} [error]\n   * @author Seth Chisamore\n   */\n  function LoggingEvent(categoryName, level, data, context, location, error) {\n    var _this2 = this;\n    _classCallCheck(this, LoggingEvent);\n    this.startTime = new Date();\n    this.categoryName = categoryName;\n    this.data = data;\n    this.level = level;\n    this.context = Object.assign({}, context); // eslint-disable-line prefer-object-spread\n    this.pid = process.pid;\n    this.error = error;\n    if (typeof location !== 'undefined') {\n      if (!location || typeof location !== 'object' || Array.isArray(location)) throw new TypeError('Invalid location type passed to LoggingEvent constructor');\n      this.constructor._getLocationKeys().forEach(function (key) {\n        if (typeof location[key] !== 'undefined') _this2[key] = location[key];\n      });\n    }\n  }\n\n  /** @private */\n  _createClass(LoggingEvent, [{\n    key: \"serialise\",\n    value: function serialise() {\n      return flatted.stringify(this, function (key, value) {\n        // JSON.stringify(new Error('test')) returns {}, which is not really useful for us.\n        // The following allows us to serialize errors (semi) correctly.\n        if (value instanceof Error) {\n          // eslint-disable-next-line prefer-object-spread\n          value = Object.assign({\n            message: value.message,\n            stack: value.stack\n          }, value);\n        }\n        // JSON.stringify({a: Number('abc'), b: 1/0, c: -1/0}) returns {a: null, b: null, c: null}.\n        // The following allows us to serialize to NaN, Infinity and -Infinity correctly.\n        // JSON.stringify([undefined]) returns [null].\n        // The following allows us to serialize to undefined correctly.\n        return serde.serialise(value);\n      });\n    }\n  }], [{\n    key: \"_getLocationKeys\",\n    value: function _getLocationKeys() {\n      return ['fileName', 'lineNumber', 'columnNumber', 'callStack', 'className', 'functionName', 'functionAlias', 'callerName'];\n    }\n  }, {\n    key: \"deserialise\",\n    value: function deserialise(serialised) {\n      var event;\n      try {\n        var rehydratedEvent = flatted.parse(serialised, function (key, value) {\n          if (value && value.message && value.stack) {\n            var fakeError = new Error(value);\n            Object.keys(value).forEach(function (k) {\n              fakeError[k] = value[k];\n            });\n            value = fakeError;\n          }\n          return serde.deserialise(value);\n        });\n        this._getLocationKeys().forEach(function (key) {\n          if (typeof rehydratedEvent[key] !== 'undefined') {\n            if (!rehydratedEvent.location) rehydratedEvent.location = {};\n            rehydratedEvent.location[key] = rehydratedEvent[key];\n          }\n        });\n        event = new LoggingEvent(rehydratedEvent.categoryName, levels.getLevel(rehydratedEvent.level.levelStr), rehydratedEvent.data, rehydratedEvent.context, rehydratedEvent.location, rehydratedEvent.error);\n        event.startTime = new Date(rehydratedEvent.startTime);\n        event.pid = rehydratedEvent.pid;\n        if (rehydratedEvent.cluster) {\n          event.cluster = rehydratedEvent.cluster;\n        }\n      } catch (e) {\n        event = new LoggingEvent('log4js', levels.ERROR, ['Unable to parse log:', serialised, 'because: ', e]);\n      }\n      return event;\n    }\n  }]);\n  return LoggingEvent;\n}();\nmodule.exports = LoggingEvent;","map":{"version":3,"names":["flatted","require","levels","SerDe","_this","_classCallCheck","deserialise","__LOG4JS_undefined__","undefined","__LOG4JS_NaN__","Number","__LOG4JS_Infinity__","deMap","serMap","Object","keys","forEach","key","value","_createClass","canSerialise","serialise","canDeserialise","serde","LoggingEvent","categoryName","level","data","context","location","error","_this2","startTime","Date","assign","pid","process","Array","isArray","TypeError","constructor","_getLocationKeys","stringify","Error","message","stack","serialised","event","rehydratedEvent","parse","fakeError","k","getLevel","levelStr","cluster","e","ERROR","module","exports"],"sources":["C:/Users/badsc/Documents/GitHub/trading-dashboard-local/node_modules/log4js/lib/LoggingEvent.js"],"sourcesContent":["/* eslint max-classes-per-file: [\"error\", 2] */\n/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_getLocationKeys\"] }] */\n\nconst flatted = require('flatted');\nconst levels = require('./levels');\n\nclass SerDe {\n  constructor() {\n    const deserialise = {\n      __LOG4JS_undefined__: undefined,\n      __LOG4JS_NaN__: Number('abc'),\n      __LOG4JS_Infinity__: 1 / 0,\n      '__LOG4JS_-Infinity__': -1 / 0,\n    };\n    this.deMap = deserialise;\n    this.serMap = {};\n    Object.keys(this.deMap).forEach((key) => {\n      const value = this.deMap[key];\n      this.serMap[value] = key;\n    });\n  }\n\n  canSerialise(key) {\n    if (typeof key === 'string') return false;\n    return key in this.serMap;\n  }\n\n  serialise(key) {\n    if (this.canSerialise(key)) return this.serMap[key];\n    return key;\n  }\n\n  canDeserialise(key) {\n    return key in this.deMap;\n  }\n\n  deserialise(key) {\n    if (this.canDeserialise(key)) return this.deMap[key];\n    return key;\n  }\n}\nconst serde = new SerDe();\n\n/**\n * @name LoggingEvent\n * @namespace Log4js\n */\nclass LoggingEvent {\n  /**\n   * Models a logging event.\n   * @constructor\n   * @param {string} categoryName name of category\n   * @param {Log4js.Level} level level of message\n   * @param {Array} data objects to log\n   * @param {Error} [error]\n   * @author Seth Chisamore\n   */\n  constructor(categoryName, level, data, context, location, error) {\n    this.startTime = new Date();\n    this.categoryName = categoryName;\n    this.data = data;\n    this.level = level;\n    this.context = Object.assign({}, context); // eslint-disable-line prefer-object-spread\n    this.pid = process.pid;\n    this.error = error;\n\n    if (typeof location !== 'undefined') {\n      if (!location || typeof location !== 'object' || Array.isArray(location))\n        throw new TypeError(\n          'Invalid location type passed to LoggingEvent constructor'\n        );\n\n      this.constructor._getLocationKeys().forEach((key) => {\n        if (typeof location[key] !== 'undefined') this[key] = location[key];\n      });\n    }\n  }\n\n  /** @private */\n  static _getLocationKeys() {\n    return [\n      'fileName',\n      'lineNumber',\n      'columnNumber',\n      'callStack',\n      'className',\n      'functionName',\n      'functionAlias',\n      'callerName',\n    ];\n  }\n\n  serialise() {\n    return flatted.stringify(this, (key, value) => {\n      // JSON.stringify(new Error('test')) returns {}, which is not really useful for us.\n      // The following allows us to serialize errors (semi) correctly.\n      if (value instanceof Error) {\n        // eslint-disable-next-line prefer-object-spread\n        value = Object.assign(\n          { message: value.message, stack: value.stack },\n          value\n        );\n      }\n      // JSON.stringify({a: Number('abc'), b: 1/0, c: -1/0}) returns {a: null, b: null, c: null}.\n      // The following allows us to serialize to NaN, Infinity and -Infinity correctly.\n      // JSON.stringify([undefined]) returns [null].\n      // The following allows us to serialize to undefined correctly.\n      return serde.serialise(value);\n    });\n  }\n\n  static deserialise(serialised) {\n    let event;\n    try {\n      const rehydratedEvent = flatted.parse(serialised, (key, value) => {\n        if (value && value.message && value.stack) {\n          const fakeError = new Error(value);\n          Object.keys(value).forEach((k) => {\n            fakeError[k] = value[k];\n          });\n          value = fakeError;\n        }\n        return serde.deserialise(value);\n      });\n      this._getLocationKeys().forEach((key) => {\n        if (typeof rehydratedEvent[key] !== 'undefined') {\n          if (!rehydratedEvent.location) rehydratedEvent.location = {};\n          rehydratedEvent.location[key] = rehydratedEvent[key];\n        }\n      });\n      event = new LoggingEvent(\n        rehydratedEvent.categoryName,\n        levels.getLevel(rehydratedEvent.level.levelStr),\n        rehydratedEvent.data,\n        rehydratedEvent.context,\n        rehydratedEvent.location,\n        rehydratedEvent.error\n      );\n      event.startTime = new Date(rehydratedEvent.startTime);\n      event.pid = rehydratedEvent.pid;\n      if (rehydratedEvent.cluster) {\n        event.cluster = rehydratedEvent.cluster;\n      }\n    } catch (e) {\n      event = new LoggingEvent('log4js', levels.ERROR, [\n        'Unable to parse log:',\n        serialised,\n        'because: ',\n        e,\n      ]);\n    }\n\n    return event;\n  }\n}\n\nmodule.exports = LoggingEvent;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}