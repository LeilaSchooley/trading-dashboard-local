{"ast":null,"code":"import * as signalR from '@microsoft/signalr';\n//import * as requestReceived from '../buffer';\n\nexport const connect = new signalR.HubConnectionBuilder().withUrl(\"https://localhost:44362/stockfeed\").withAutomaticReconnect().configureLogging(signalR.LogLevel.Debug).build();\nconnect.onclose(() => {\n  console.log('closed ');\n});\nexport async function start() {\n  try {\n    await connect.start().then(() => {\n      receiveRequest();\n    });\n  } catch (err) {\n    console.log(err);\n    setTimeout(start, 5000);\n  }\n}\n;\nexport const sendRequest = async request => {\n  setTimeout(() => {\n    invoke(request); // request to be sent from another class\n  }, 100);\n};\nconst onClose = () => {\n  connect.onclose(() => {\n    // Update state: reconnected\n    console.log(\"reconnected close\");\n  });\n};\nconst onReconnecting = () => {\n  connect.onreconnected(() => {\n    // Update state: reconnected\n    console.log(\"reconnected ok\");\n  });\n  console.log();\n};\nconst invoke = request => {\n  connect.invoke('sendRequest', request);\n};\nconst receiveRequest = () => {\n  connect.on(\"requestData\", (key, data) => console.log(''));\n};\nsetTimeout(() => {\n  connect.stop();\n}, 10000);\nonClose();","map":{"version":3,"names":["signalR","connect","HubConnectionBuilder","withUrl","withAutomaticReconnect","configureLogging","LogLevel","Debug","build","onclose","console","log","start","then","receiveRequest","err","setTimeout","sendRequest","request","invoke","onClose","onReconnecting","onreconnected","on","key","data","stop"],"sources":["C:/Users/badsc/Documents/GitHub/trading-dashboard-local/src/HubConnectionHandler.js"],"sourcesContent":["import * as signalR from '@microsoft/signalr';\r\n//import * as requestReceived from '../buffer';\r\n\r\nexport const connect = new signalR.HubConnectionBuilder()\r\n    .withUrl(\"https://localhost:44362/stockfeed\")\r\n    .withAutomaticReconnect()\r\n    .configureLogging(signalR.LogLevel.Debug)\r\n    .build();\r\n\r\n\r\nconnect.onclose(() => {\r\n    console.log('closed ');\r\n});\r\n\r\nexport async function start() {\r\n    try {\r\n        await connect.start().then(() => {\r\n            receiveRequest()\r\n        });\r\n    } catch (err) {\r\n        console.log(err);\r\n        setTimeout(start, 5000);\r\n    }\r\n};\r\n\r\nexport const sendRequest = async (request) => {\r\n    setTimeout(() => {\r\n        invoke(request); // request to be sent from another class\r\n    }, 100);\r\n}\r\n\r\n\r\nconst onClose = () => {\r\n    connect.onclose(() => {\r\n        // Update state: reconnected\r\n        console.log(\"reconnected close\")\r\n    });\r\n}\r\n\r\n\r\nconst onReconnecting = () => {\r\n    connect.onreconnected(() => {\r\n        // Update state: reconnected\r\n        console.log(\"reconnected ok\")\r\n\r\n    });\r\n    console.log()\r\n}\r\n\r\nconst invoke = (request) => {\r\n    connect.invoke('sendRequest', (request));\r\n}\r\n\r\nconst receiveRequest = () => {\r\n    connect.on(\"requestData\", (key, data) =>\r\n     console.log(''));\r\n}\r\n\r\nsetTimeout(() => {\r\n\r\n    connect.stop();\r\n\r\n}, 10000);\r\n\r\nonClose();\r\n\r\n\r\n"],"mappings":"AAAA,OAAO,KAAKA,OAAO,MAAM,oBAAoB;AAC7C;;AAEA,OAAO,MAAMC,OAAO,GAAG,IAAID,OAAO,CAACE,oBAAoB,CAAC,CAAC,CACpDC,OAAO,CAAC,mCAAmC,CAAC,CAC5CC,sBAAsB,CAAC,CAAC,CACxBC,gBAAgB,CAACL,OAAO,CAACM,QAAQ,CAACC,KAAK,CAAC,CACxCC,KAAK,CAAC,CAAC;AAGZP,OAAO,CAACQ,OAAO,CAAC,MAAM;EAClBC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;AAC1B,CAAC,CAAC;AAEF,OAAO,eAAeC,KAAKA,CAAA,EAAG;EAC1B,IAAI;IACA,MAAMX,OAAO,CAACW,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;MAC7BC,cAAc,CAAC,CAAC;IACpB,CAAC,CAAC;EACN,CAAC,CAAC,OAAOC,GAAG,EAAE;IACVL,OAAO,CAACC,GAAG,CAACI,GAAG,CAAC;IAChBC,UAAU,CAACJ,KAAK,EAAE,IAAI,CAAC;EAC3B;AACJ;AAAC;AAED,OAAO,MAAMK,WAAW,GAAG,MAAOC,OAAO,IAAK;EAC1CF,UAAU,CAAC,MAAM;IACbG,MAAM,CAACD,OAAO,CAAC,CAAC,CAAC;EACrB,CAAC,EAAE,GAAG,CAAC;AACX,CAAC;AAGD,MAAME,OAAO,GAAGA,CAAA,KAAM;EAClBnB,OAAO,CAACQ,OAAO,CAAC,MAAM;IAClB;IACAC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EACpC,CAAC,CAAC;AACN,CAAC;AAGD,MAAMU,cAAc,GAAGA,CAAA,KAAM;EACzBpB,OAAO,CAACqB,aAAa,CAAC,MAAM;IACxB;IACAZ,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EAEjC,CAAC,CAAC;EACFD,OAAO,CAACC,GAAG,CAAC,CAAC;AACjB,CAAC;AAED,MAAMQ,MAAM,GAAID,OAAO,IAAK;EACxBjB,OAAO,CAACkB,MAAM,CAAC,aAAa,EAAGD,OAAQ,CAAC;AAC5C,CAAC;AAED,MAAMJ,cAAc,GAAGA,CAAA,KAAM;EACzBb,OAAO,CAACsB,EAAE,CAAC,aAAa,EAAE,CAACC,GAAG,EAAEC,IAAI,KACnCf,OAAO,CAACC,GAAG,CAAC,EAAE,CAAC,CAAC;AACrB,CAAC;AAEDK,UAAU,CAAC,MAAM;EAEbf,OAAO,CAACyB,IAAI,CAAC,CAAC;AAElB,CAAC,EAAE,KAAK,CAAC;AAETN,OAAO,CAAC,CAAC"},"metadata":{},"sourceType":"module"}