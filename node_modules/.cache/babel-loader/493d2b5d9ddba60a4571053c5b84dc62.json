{"ast":null,"code":"// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nvar __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n  }\n  return t;\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nimport { LogLevel } from \"./ILogger\";\nimport { NullLogger } from \"./Loggers\";\n// Version token that will be replaced by the prepack command\n/** The version of the SignalR client. */\nexport var VERSION = \"5.0.17\";\n/** @private */\nvar Arg = /** @class */function () {\n  function Arg() {}\n  Arg.isRequired = function (val, name) {\n    if (val === null || val === undefined) {\n      throw new Error(\"The '\" + name + \"' argument is required.\");\n    }\n  };\n  Arg.isNotEmpty = function (val, name) {\n    if (!val || val.match(/^\\s*$/)) {\n      throw new Error(\"The '\" + name + \"' argument should not be empty.\");\n    }\n  };\n  Arg.isIn = function (val, values, name) {\n    // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\n    if (!(val in values)) {\n      throw new Error(\"Unknown \" + name + \" value: \" + val + \".\");\n    }\n  };\n  return Arg;\n}();\nexport { Arg };\n/** @private */\nvar Platform = /** @class */function () {\n  function Platform() {}\n  Object.defineProperty(Platform, \"isBrowser\", {\n    get: function () {\n      return typeof window === \"object\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Platform, \"isWebWorker\", {\n    get: function () {\n      return typeof self === \"object\" && \"importScripts\" in self;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Platform, \"isNode\", {\n    get: function () {\n      return !this.isBrowser && !this.isWebWorker;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Platform;\n}();\nexport { Platform };\n/** @private */\nexport function getDataDetail(data, includeContent) {\n  var detail = \"\";\n  if (isArrayBuffer(data)) {\n    detail = \"Binary data of length \" + data.byteLength;\n    if (includeContent) {\n      detail += \". Content: '\" + formatArrayBuffer(data) + \"'\";\n    }\n  } else if (typeof data === \"string\") {\n    detail = \"String data of length \" + data.length;\n    if (includeContent) {\n      detail += \". Content: '\" + data + \"'\";\n    }\n  }\n  return detail;\n}\n/** @private */\nexport function formatArrayBuffer(data) {\n  var view = new Uint8Array(data);\n  // Uint8Array.map only supports returning another Uint8Array?\n  var str = \"\";\n  view.forEach(function (num) {\n    var pad = num < 16 ? \"0\" : \"\";\n    str += \"0x\" + pad + num.toString(16) + \" \";\n  });\n  // Trim of trailing space.\n  return str.substr(0, str.length - 1);\n}\n// Also in signalr-protocol-msgpack/Utils.ts\n/** @private */\nexport function isArrayBuffer(val) {\n  return val && typeof ArrayBuffer !== \"undefined\" && (val instanceof ArrayBuffer ||\n  // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\n  val.constructor && val.constructor.name === \"ArrayBuffer\");\n}\n/** @private */\nexport function sendMessage(logger, transportName, httpClient, url, accessTokenFactory, content, logMessageContent, withCredentials, defaultHeaders) {\n  return __awaiter(this, void 0, void 0, function () {\n    var _a, headers, token, _b, name, value, responseType, response;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          if (!accessTokenFactory) return [3 /*break*/, 2];\n          return [4 /*yield*/, accessTokenFactory()];\n        case 1:\n          token = _c.sent();\n          if (token) {\n            headers = (_a = {}, _a[\"Authorization\"] = \"Bearer \" + token, _a);\n          }\n          _c.label = 2;\n        case 2:\n          _b = getUserAgentHeader(), name = _b[0], value = _b[1];\n          headers[name] = value;\n          logger.log(LogLevel.Trace, \"(\" + transportName + \" transport) sending data. \" + getDataDetail(content, logMessageContent) + \".\");\n          responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\n          return [4 /*yield*/, httpClient.post(url, {\n            content: content,\n            headers: __assign({}, headers, defaultHeaders),\n            responseType: responseType,\n            withCredentials: withCredentials\n          })];\n        case 3:\n          response = _c.sent();\n          logger.log(LogLevel.Trace, \"(\" + transportName + \" transport) request complete. Response status: \" + response.statusCode + \".\");\n          return [2 /*return*/];\n      }\n    });\n  });\n}\n/** @private */\nexport function createLogger(logger) {\n  if (logger === undefined) {\n    return new ConsoleLogger(LogLevel.Information);\n  }\n  if (logger === null) {\n    return NullLogger.instance;\n  }\n  if (logger.log) {\n    return logger;\n  }\n  return new ConsoleLogger(logger);\n}\n/** @private */\nvar SubjectSubscription = /** @class */function () {\n  function SubjectSubscription(subject, observer) {\n    this.subject = subject;\n    this.observer = observer;\n  }\n  SubjectSubscription.prototype.dispose = function () {\n    var index = this.subject.observers.indexOf(this.observer);\n    if (index > -1) {\n      this.subject.observers.splice(index, 1);\n    }\n    if (this.subject.observers.length === 0 && this.subject.cancelCallback) {\n      this.subject.cancelCallback().catch(function (_) {});\n    }\n  };\n  return SubjectSubscription;\n}();\nexport { SubjectSubscription };\n/** @private */\nvar ConsoleLogger = /** @class */function () {\n  function ConsoleLogger(minimumLogLevel) {\n    this.minimumLogLevel = minimumLogLevel;\n    this.outputConsole = console;\n  }\n  ConsoleLogger.prototype.log = function (logLevel, message) {\n    if (logLevel >= this.minimumLogLevel) {\n      switch (logLevel) {\n        case LogLevel.Critical:\n        case LogLevel.Error:\n          this.outputConsole.error(\"[\" + new Date().toISOString() + \"] \" + LogLevel[logLevel] + \": \" + message);\n          break;\n        case LogLevel.Warning:\n          this.outputConsole.warn(\"[\" + new Date().toISOString() + \"] \" + LogLevel[logLevel] + \": \" + message);\n          break;\n        case LogLevel.Information:\n          this.outputConsole.info(\"[\" + new Date().toISOString() + \"] \" + LogLevel[logLevel] + \": \" + message);\n          break;\n        default:\n          // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\n          this.outputConsole.log(\"[\" + new Date().toISOString() + \"] \" + LogLevel[logLevel] + \": \" + message);\n          break;\n      }\n    }\n  };\n  return ConsoleLogger;\n}();\nexport { ConsoleLogger };\n/** @private */\nexport function getUserAgentHeader() {\n  var userAgentHeaderName = \"X-SignalR-User-Agent\";\n  if (Platform.isNode) {\n    userAgentHeaderName = \"User-Agent\";\n  }\n  return [userAgentHeaderName, constructUserAgent(VERSION, getOsName(), getRuntime(), getRuntimeVersion())];\n}\n/** @private */\nexport function constructUserAgent(version, os, runtime, runtimeVersion) {\n  // Microsoft SignalR/[Version] ([Detailed Version]; [Operating System]; [Runtime]; [Runtime Version])\n  var userAgent = \"Microsoft SignalR/\";\n  var majorAndMinor = version.split(\".\");\n  userAgent += majorAndMinor[0] + \".\" + majorAndMinor[1];\n  userAgent += \" (\" + version + \"; \";\n  if (os && os !== \"\") {\n    userAgent += os + \"; \";\n  } else {\n    userAgent += \"Unknown OS; \";\n  }\n  userAgent += \"\" + runtime;\n  if (runtimeVersion) {\n    userAgent += \"; \" + runtimeVersion;\n  } else {\n    userAgent += \"; Unknown Runtime Version\";\n  }\n  userAgent += \")\";\n  return userAgent;\n}\nfunction getOsName() {\n  if (Platform.isNode) {\n    switch (process.platform) {\n      case \"win32\":\n        return \"Windows NT\";\n      case \"darwin\":\n        return \"macOS\";\n      case \"linux\":\n        return \"Linux\";\n      default:\n        return process.platform;\n    }\n  } else {\n    return \"\";\n  }\n}\nfunction getRuntimeVersion() {\n  if (Platform.isNode) {\n    return process.versions.node;\n  }\n  return undefined;\n}\nfunction getRuntime() {\n  if (Platform.isNode) {\n    return \"NodeJS\";\n  } else {\n    return \"Browser\";\n  }\n}","map":{"version":3,"names":["LogLevel","NullLogger","VERSION","Arg","isRequired","val","name","undefined","Error","isNotEmpty","match","isIn","values","Platform","Object","defineProperty","get","window","self","isBrowser","isWebWorker","getDataDetail","data","includeContent","detail","isArrayBuffer","byteLength","formatArrayBuffer","length","view","Uint8Array","str","forEach","num","pad","toString","substr","ArrayBuffer","constructor","sendMessage","logger","transportName","httpClient","url","accessTokenFactory","content","logMessageContent","withCredentials","defaultHeaders","headers","token","_c","sent","_a","_b","getUserAgentHeader","value","log","Trace","responseType","post","__assign","response","statusCode","createLogger","ConsoleLogger","Information","instance","SubjectSubscription","subject","observer","prototype","dispose","index","observers","indexOf","splice","cancelCallback","catch","_","minimumLogLevel","outputConsole","console","logLevel","message","Critical","error","Date","toISOString","Warning","warn","info","userAgentHeaderName","isNode","constructUserAgent","getOsName","getRuntime","getRuntimeVersion","version","os","runtime","runtimeVersion","userAgent","majorAndMinor","split","process","platform","versions","node"],"sources":["../../src/Utils.ts"],"sourcesContent":["// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { MessageHeaders } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { IStreamSubscriber, ISubscription } from \"./Stream\";\r\nimport { Subject } from \"./Subject\";\r\n\r\n// Version token that will be replaced by the prepack command\r\n/** The version of the SignalR client. */\r\nexport const VERSION: string = \"0.0.0-DEV_BUILD\";\r\n\r\n/** @private */\r\nexport class Arg {\r\n    public static isRequired(val: any, name: string): void {\r\n        if (val === null || val === undefined) {\r\n            throw new Error(`The '${name}' argument is required.`);\r\n        }\r\n    }\r\n    public static isNotEmpty(val: string, name: string): void {\r\n        if (!val || val.match(/^\\s*$/)) {\r\n            throw new Error(`The '${name}' argument should not be empty.`);\r\n        }\r\n    }\r\n\r\n    public static isIn(val: any, values: any, name: string): void {\r\n        // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\r\n        if (!(val in values)) {\r\n            throw new Error(`Unknown ${name} value: ${val}.`);\r\n        }\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport class Platform {\r\n    public static get isBrowser(): boolean {\r\n        return typeof window === \"object\";\r\n    }\r\n\r\n    public static get isWebWorker(): boolean {\r\n        return typeof self === \"object\" && \"importScripts\" in self;\r\n    }\r\n\r\n    public static get isNode(): boolean {\r\n        return !this.isBrowser && !this.isWebWorker;\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport function getDataDetail(data: any, includeContent: boolean): string {\r\n    let detail = \"\";\r\n    if (isArrayBuffer(data)) {\r\n        detail = `Binary data of length ${data.byteLength}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${formatArrayBuffer(data)}'`;\r\n        }\r\n    } else if (typeof data === \"string\") {\r\n        detail = `String data of length ${data.length}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${data}'`;\r\n        }\r\n    }\r\n    return detail;\r\n}\r\n\r\n/** @private */\r\nexport function formatArrayBuffer(data: ArrayBuffer): string {\r\n    const view = new Uint8Array(data);\r\n\r\n    // Uint8Array.map only supports returning another Uint8Array?\r\n    let str = \"\";\r\n    view.forEach((num) => {\r\n        const pad = num < 16 ? \"0\" : \"\";\r\n        str += `0x${pad}${num.toString(16)} `;\r\n    });\r\n\r\n    // Trim of trailing space.\r\n    return str.substr(0, str.length - 1);\r\n}\r\n\r\n// Also in signalr-protocol-msgpack/Utils.ts\r\n/** @private */\r\nexport function isArrayBuffer(val: any): val is ArrayBuffer {\r\n    return val && typeof ArrayBuffer !== \"undefined\" &&\r\n        (val instanceof ArrayBuffer ||\r\n            // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\r\n            (val.constructor && val.constructor.name === \"ArrayBuffer\"));\r\n}\r\n\r\n/** @private */\r\nexport async function sendMessage(logger: ILogger, transportName: string, httpClient: HttpClient, url: string, accessTokenFactory: (() => string | Promise<string>) | undefined,\r\n                                  content: string | ArrayBuffer, logMessageContent: boolean, withCredentials: boolean, defaultHeaders: MessageHeaders): Promise<void> {\r\n    let headers = {};\r\n    if (accessTokenFactory) {\r\n        const token = await accessTokenFactory();\r\n        if (token) {\r\n            headers = {\r\n                [\"Authorization\"]: `Bearer ${token}`,\r\n            };\r\n        }\r\n    }\r\n\r\n    const [name, value] = getUserAgentHeader();\r\n    headers[name] = value;\r\n\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) sending data. ${getDataDetail(content, logMessageContent)}.`);\r\n\r\n    const responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\r\n    const response = await httpClient.post(url, {\r\n        content,\r\n        headers: { ...headers, ...defaultHeaders},\r\n        responseType,\r\n        withCredentials,\r\n    });\r\n\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) request complete. Response status: ${response.statusCode}.`);\r\n}\r\n\r\n/** @private */\r\nexport function createLogger(logger?: ILogger | LogLevel) {\r\n    if (logger === undefined) {\r\n        return new ConsoleLogger(LogLevel.Information);\r\n    }\r\n\r\n    if (logger === null) {\r\n        return NullLogger.instance;\r\n    }\r\n\r\n    if ((logger as ILogger).log) {\r\n        return logger as ILogger;\r\n    }\r\n\r\n    return new ConsoleLogger(logger as LogLevel);\r\n}\r\n\r\n/** @private */\r\nexport class SubjectSubscription<T> implements ISubscription<T> {\r\n    private subject: Subject<T>;\r\n    private observer: IStreamSubscriber<T>;\r\n\r\n    constructor(subject: Subject<T>, observer: IStreamSubscriber<T>) {\r\n        this.subject = subject;\r\n        this.observer = observer;\r\n    }\r\n\r\n    public dispose(): void {\r\n        const index: number = this.subject.observers.indexOf(this.observer);\r\n        if (index > -1) {\r\n            this.subject.observers.splice(index, 1);\r\n        }\r\n\r\n        if (this.subject.observers.length === 0 && this.subject.cancelCallback) {\r\n            this.subject.cancelCallback().catch((_) => { });\r\n        }\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport class ConsoleLogger implements ILogger {\r\n    private readonly minimumLogLevel: LogLevel;\r\n\r\n    // Public for testing purposes.\r\n    public outputConsole: {\r\n        error(message: any): void,\r\n        warn(message: any): void,\r\n        info(message: any): void,\r\n        log(message: any): void,\r\n    };\r\n\r\n    constructor(minimumLogLevel: LogLevel) {\r\n        this.minimumLogLevel = minimumLogLevel;\r\n        this.outputConsole = console;\r\n    }\r\n\r\n    public log(logLevel: LogLevel, message: string): void {\r\n        if (logLevel >= this.minimumLogLevel) {\r\n            switch (logLevel) {\r\n                case LogLevel.Critical:\r\n                case LogLevel.Error:\r\n                    this.outputConsole.error(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n                case LogLevel.Warning:\r\n                    this.outputConsole.warn(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n                case LogLevel.Information:\r\n                    this.outputConsole.info(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n                default:\r\n                    // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\r\n                    this.outputConsole.log(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport function getUserAgentHeader(): [string, string] {\r\n    let userAgentHeaderName = \"X-SignalR-User-Agent\";\r\n    if (Platform.isNode) {\r\n        userAgentHeaderName = \"User-Agent\";\r\n    }\r\n    return [ userAgentHeaderName, constructUserAgent(VERSION, getOsName(), getRuntime(), getRuntimeVersion()) ];\r\n}\r\n\r\n/** @private */\r\nexport function constructUserAgent(version: string, os: string, runtime: string, runtimeVersion: string | undefined): string {\r\n    // Microsoft SignalR/[Version] ([Detailed Version]; [Operating System]; [Runtime]; [Runtime Version])\r\n    let userAgent: string = \"Microsoft SignalR/\";\r\n\r\n    const majorAndMinor = version.split(\".\");\r\n    userAgent += `${majorAndMinor[0]}.${majorAndMinor[1]}`;\r\n    userAgent += ` (${version}; `;\r\n\r\n    if (os && os !== \"\") {\r\n        userAgent += `${os}; `;\r\n    } else {\r\n        userAgent += \"Unknown OS; \";\r\n    }\r\n\r\n    userAgent += `${runtime}`;\r\n\r\n    if (runtimeVersion) {\r\n        userAgent += `; ${runtimeVersion}`;\r\n    } else {\r\n        userAgent += \"; Unknown Runtime Version\";\r\n    }\r\n\r\n    userAgent += \")\";\r\n    return userAgent;\r\n}\r\n\r\nfunction getOsName(): string {\r\n    if (Platform.isNode) {\r\n        switch (process.platform) {\r\n            case \"win32\":\r\n                return \"Windows NT\";\r\n            case \"darwin\":\r\n                return \"macOS\";\r\n            case \"linux\":\r\n                return \"Linux\";\r\n            default:\r\n                return process.platform;\r\n        }\r\n    } else {\r\n        return \"\";\r\n    }\r\n}\r\n\r\nfunction getRuntimeVersion(): string | undefined {\r\n    if (Platform.isNode) {\r\n        return process.versions.node;\r\n    }\r\n    return undefined;\r\n}\r\n\r\nfunction getRuntime(): string {\r\n    if (Platform.isNode) {\r\n        return \"NodeJS\";\r\n    } else {\r\n        return \"Browser\";\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}